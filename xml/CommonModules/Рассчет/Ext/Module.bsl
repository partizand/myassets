// Расчет доходности облигаций к погашению на заданную дату
// На указанную дату должна быть котировка и НКД
Процедура РасчитатьДоходностьОблигаций(Дата) Экспорт

	РассчетДоходностиОблигаций(Дата);
	//РассчетКупоннойДоходностиОблигаций(Дата);
		

КонецПроцедуры

Процедура РассчетДоходностиОблигаций(Дата)

	

	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦенныеБумаги.Ссылка КАК Облигация,
		|	ЦенныеБумаги.ТипКупона КАК ТипКупона,
		|	ЦенныеБумаги.ДатаПогашения КАК ДатаПогашения,
		|	ЦенныеБумаги.ПериодКупона КАК ПериодКупона,
		|	Котировки.Цена КАК Цена,
		|	Котировки.НКД КАК НКД
		|ПОМЕСТИТЬ ОбщийСписокОблигаций
		|ИЗ
		|	Справочник.ЦенныеБумаги КАК ЦенныеБумаги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Котировки КАК Котировки
		|		ПО (ЦенныеБумаги.Ссылка = Котировки.ЦБ)
		|ГДЕ
		|	ЦенныеБумаги.ВидЦБ = &ВидЦБОблигация
		|	И ЦенныеБумаги.ДатаПогашения >= &ДатаПокупки
		|	И НЕ Котировки.Цена ЕСТЬ NULL
		|	И Котировки.Период = &ДатаПокупки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбщийСписокОблигаций.Облигация КАК Облигация,
		|	ОбщийСписокОблигаций.ТипКупона КАК ТипКупона,
		|	ОбщийСписокОблигаций.ДатаПогашения КАК ДатаПогашения,
		|	ОбщийСписокОблигаций.ПериодКупона КАК ПериодКупона,
		|	ОбщийСписокОблигаций.Цена КАК Цена,
		|	ОбщийСписокОблигаций.НКД КАК НКД,
		|	КупоныОблигацийСрезПервых.Период КАК ДатаБлижКупона,
		|	НоминалыОблигацийСрезПоследних.СуммаНоминала КАК СуммаНоминала,
		|	ЕСТЬNULL(ОфертыОблигацийСрезПервых.Период, ОбщийСписокОблигаций.ДатаПогашения) КАК ДатаДоходности,
		|	ЕСТЬNULL(ОфертыОблигацийСрезПервых.ЦенаВыкупа, 100) КАК ЦенаВыкупа,
		|	ОбщийСписокОблигаций.Цена * НоминалыОблигацийСрезПоследних.СуммаНоминала / 100 КАК СуммаПокупки,
		|	КупоныОблигацийСрезПервых.СуммаКупона КАК СуммаКупона
		|ПОМЕСТИТЬ СписокОблигаций
		|ИЗ
		|	ОбщийСписокОблигаций КАК ОбщийСписокОблигаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КупоныОблигаций.СрезПервых(
		|				&ДатаПокупки,
		|				ЦБ В
		|					(ВЫБРАТЬ
		|						ОбщийСписокОблигаций.Облигация
		|					ИЗ
		|						ОбщийСписокОблигаций КАК ОбщийСписокОблигаций)) КАК КупоныОблигацийСрезПервых
		|		ПО ОбщийСписокОблигаций.Облигация = КупоныОблигацийСрезПервых.ЦБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоминалыОблигаций.СрезПоследних(
		|				&ДатаПокупки,
		|				ЦБ В
		|					(ВЫБРАТЬ
		|						ОбщийСписокОблигаций.Облигация
		|					ИЗ
		|						ОбщийСписокОблигаций КАК ОбщийСписокОблигаций)) КАК НоминалыОблигацийСрезПоследних
		|		ПО ОбщийСписокОблигаций.Облигация = НоминалыОблигацийСрезПоследних.ЦБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОфертыОблигаций.СрезПервых(
		|				&ДатаПокупки,
		|				ЦБ В
		|					(ВЫБРАТЬ
		|						ОбщийСписокОблигаций.Облигация
		|					ИЗ
		|						ОбщийСписокОблигаций КАК ОбщийСписокОблигаций)) КАК ОфертыОблигацийСрезПервых
		|		ПО ОбщийСписокОблигаций.Облигация = ОфертыОблигацийСрезПервых.ЦБ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Облигация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокОблигаций.Облигация КАК Облигация,
		|	СписокОблигаций.ТипКупона КАК ТипКупона,
		|	СписокОблигаций.ДатаПогашения КАК ДатаПогашения,
		|	СписокОблигаций.ПериодКупона КАК ПериодКупона,
		|	СписокОблигаций.Цена КАК Цена,
		|	СписокОблигаций.НКД КАК НКД,
		|	СписокОблигаций.ДатаБлижКупона КАК ДатаБлижКупона,
		|	СписокОблигаций.СуммаНоминала КАК СуммаНоминала,
		|	СписокОблигаций.ДатаДоходности КАК ДатаДоходности,
		|	СписокОблигаций.ЦенаВыкупа КАК ЦенаВыкупа,
		|	СписокОблигаций.СуммаКупона КАК СуммаКупона,
		|	МАКСИМУМ(НоминалыОблигаций.Период) КАК ДатаНоминалаПродажи,
		|	СписокОблигаций.СуммаПокупки КАК СуммаПокупки
		|ПОМЕСТИТЬ СписокСДатойНоминала
		|ИЗ
		|	СписокОблигаций КАК СписокОблигаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоминалыОблигаций КАК НоминалыОблигаций
		|		ПО СписокОблигаций.Облигация = НоминалыОблигаций.ЦБ
		|			И (НоминалыОблигаций.Период <= СписокОблигаций.ДатаДоходности)
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокОблигаций.Облигация,
		|	СписокОблигаций.ТипКупона,
		|	СписокОблигаций.ДатаПогашения,
		|	СписокОблигаций.ПериодКупона,
		|	СписокОблигаций.Цена,
		|	СписокОблигаций.НКД,
		|	СписокОблигаций.ДатаБлижКупона,
		|	СписокОблигаций.СуммаНоминала,
		|	СписокОблигаций.ДатаДоходности,
		|	СписокОблигаций.ЦенаВыкупа,
		|	СписокОблигаций.СуммаКупона,
		|	СписокОблигаций.СуммаПокупки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокСДатойНоминала.Облигация КАК Облигация,
		|	СписокСДатойНоминала.ТипКупона КАК ТипКупона,
		|	СписокСДатойНоминала.ДатаПогашения КАК ДатаПогашения,
		|	СписокСДатойНоминала.ПериодКупона КАК ПериодКупона,
		|	СписокСДатойНоминала.Цена КАК Цена,
		|	СписокСДатойНоминала.НКД КАК НКД,
		|	СписокСДатойНоминала.ДатаБлижКупона КАК ДатаБлижКупона,
		|	СписокСДатойНоминала.СуммаНоминала КАК СуммаНоминала,
		|	СписокСДатойНоминала.ДатаДоходности КАК ДатаДоходности,
		|	СписокСДатойНоминала.ЦенаВыкупа КАК ЦенаВыкупа,
		|	СписокСДатойНоминала.СуммаКупона КАК СуммаКупона,
		|	СписокСДатойНоминала.ДатаНоминалаПродажи КАК ДатаНоминалаПродажи,
		|	НоминалыОблигаций.СуммаНоминала КАК СуммаНоминалаПодажи,
		|	НоминалыОблигаций.СуммаНоминала * СписокСДатойНоминала.ЦенаВыкупа / 100 КАК СуммаПродажи,
		|	СписокСДатойНоминала.СуммаПокупки КАК СуммаПокупки
		|ПОМЕСТИТЬ СписокССуумами
		|ИЗ
		|	СписокСДатойНоминала КАК СписокСДатойНоминала
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоминалыОблигаций КАК НоминалыОблигаций
		|		ПО СписокСДатойНоминала.Облигация = НоминалыОблигаций.ЦБ
		|			И СписокСДатойНоминала.ДатаНоминалаПродажи = НоминалыОблигаций.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокССуумами.Облигация КАК Облигация,
		|	КупоныОблигаций.Период КАК Период,
		|	КупоныОблигаций.СуммаКупона КАК Сумма,
		|	""Купоны"" КАК ТипВыплаты,
		|	СписокССуумами.ПериодКупона КАК ПериодКупона,
		|	СписокССуумами.ДатаБлижКупона КАК ДатаБлижКупона,
		|	СписокССуумами.СуммаКупона КАК СуммаКупона,
		|	СписокССуумами.ДатаДоходности КАК ДатаДоходности,
		|	СписокССуумами.НКД КАК НКД,
		|	СписокССуумами.СуммаПокупки КАК СуммаПокупки,
		|	СписокССуумами.ТипКупона КАК ТипКупона
		|ПОМЕСТИТЬ КупоныИАмортизация
		|ИЗ
		|	СписокССуумами КАК СписокССуумами
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КупоныОблигаций КАК КупоныОблигаций
		|		ПО СписокССуумами.Облигация = КупоныОблигаций.ЦБ
		|			И (КупоныОблигаций.Период <= СписокССуумами.ДатаДоходности)
		|ГДЕ
		|	КупоныОблигаций.Период > &ДатаПокупки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокССуумами.Облигация,
		|	НоминалыОблигаций.Период,
		|	НоминалыОблигаций.СуммаАмортизации,
		|	""Амортизация"",
		|	СписокССуумами.ПериодКупона,
		|	СписокССуумами.ДатаБлижКупона,
		|	СписокССуумами.СуммаКупона,
		|	СписокССуумами.ДатаДоходности,
		|	СписокССуумами.НКД,
		|	СписокССуумами.СуммаПокупки,
		|	NULL
		|ИЗ
		|	СписокССуумами КАК СписокССуумами
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоминалыОблигаций КАК НоминалыОблигаций
		|		ПО СписокССуумами.Облигация = НоминалыОблигаций.ЦБ
		|			И (НоминалыОблигаций.Период <= СписокССуумами.ДатаДоходности)
		|ГДЕ
		|	НоминалыОблигаций.Период >= &ДатаПокупки
		|	И НоминалыОблигаций.СуммаАмортизации > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокССуумами.Облигация КАК Облигация,
		|	СписокССуумами.ТипКупона КАК ТипКупона,
		|	СписокССуумами.ПериодКупона КАК ПериодКупона,
		|	СписокССуумами.НКД КАК НКД,
		|	СписокССуумами.ДатаБлижКупона КАК ДатаБлижКупона,
		|	СписокССуумами.ДатаДоходности КАК ДатаДоходности,
		|	СписокССуумами.СуммаКупона КАК СуммаКупона,
		|	СписокССуумами.СуммаПокупки КАК СуммаПокупки,
		|	""Покупка"" КАК ТипВыплаты,
		|	-(СписокССуумами.СуммаПокупки + СписокССуумами.НКД) КАК Сумма,
		|	&ДатаПокупки КАК Период
		|ИЗ
		|	СписокССуумами КАК СписокССуумами
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписокССуумами.Облигация,
		|	СписокССуумами.ТипКупона,
		|	СписокССуумами.ПериодКупона,
		|	СписокССуумами.НКД,
		|	СписокССуумами.ДатаБлижКупона,
		|	СписокССуумами.ДатаДоходности,
		|	СписокССуумами.СуммаКупона,
		|	СписокССуумами.СуммаПокупки,
		|	""Погашение"",
		|	СписокССуумами.СуммаПродажи,
		|	СписокССуумами.ДатаДоходности
		|ИЗ
		|	СписокССуумами КАК СписокССуумами
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КупоныИАмортизация.Облигация,
		|	КупоныИАмортизация.ТипКупона,
		|	КупоныИАмортизация.ПериодКупона,
		|	КупоныИАмортизация.НКД,
		|	КупоныИАмортизация.ДатаБлижКупона,
		|	КупоныИАмортизация.ДатаДоходности,
		|	КупоныИАмортизация.СуммаКупона,
		|	КупоныИАмортизация.СуммаПокупки,
		|	КупоныИАмортизация.ТипВыплаты,
		|	КупоныИАмортизация.Сумма,
		|	КупоныИАмортизация.Период
		|ИЗ
		|	КупоныИАмортизация КАК КупоныИАмортизация
		|ИТОГИ
		|	МИНИМУМ(ТипКупона),
		|	МИНИМУМ(ПериодКупона),
		|	МИНИМУМ(НКД),
		|	МИНИМУМ(ДатаБлижКупона),
		|	МИНИМУМ(ДатаДоходности),
		|	МИНИМУМ(СуммаКупона),
		|	МИНИМУМ(СуммаПокупки),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТипВыплаты)
		|ПО
		|	Облигация";	
	

	
	Запрос.УстановитьПараметр("ВидЦБОблигация", Перечисления.ВидыЦБ.Облигация);
	Запрос.УстановитьПараметр("ДатаПокупки", НачалоДня(Дата));
	//Запрос.УстановитьПараметр("КрайняяДата", Дата("30991101"));
	
	//ТипКупона = Новый Массив;
	//ТипКупона.Добавить(Перечисления.ТипыКупонов.Постоянный);
	//ТипКупона.Добавить(Перечисления.ТипыКупонов.Переменный);
	//
	//Запрос.УстановитьПараметр("ТипКупона", ТипКупона);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЦБ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОблигации = Новый ТаблицаЗначений;
    ТаблицаОблигации.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата",Новый КвалификаторыДаты(ЧастиДаты.Дата)));
    ТаблицаОблигации.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(10, 2)));
	//ТаблицаОблигации.Колонки.Добавить("Тип", Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(10))); // Для отладки
	//ТаблицаОблигации.Колонки.Добавить("ЦБ", Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(15)));
	
	Пока ВыборкаЦБ.Следующий() Цикл
		
		// Расчет купонной доходности
		// для всех облигаций
		// = СуммаКупона/(СуммаПокупки+НКД) * 365 /  ПериодКупона * 100
		СуммаПокупкиСНКД = ВыборкаЦБ.СуммаПокупки+ВыборкаЦБ.НКД;
		Если СуммаПокупкиСНКД<>0 И ВыборкаЦБ.ПериодКупона<>0 Тогда
		
			КупоннаяДоходность = ВыборкаЦБ.СуммаКупона / СуммаПокупкиСНКД * 365 / ВыборкаЦБ.ПериодКупона * 100;
		Иначе
			КупоннаяДоходность = 0;
		КонецЕсли; 
		
		// Расчет доходности к погашению
		// Не для всех облигаций
		// Постоянный купон - до даты погашения
		// Переменный - до даты оферты
		// Плавающий, если остался последний купон
		
		Если ВыборкаЦБ.ТипКупона = Перечисления.ТипыКупонов.Постоянный ИЛИ ВыборкаЦБ.ТипКупона = Перечисления.ТипыКупонов.Переменный ИЛИ
			(ВыборкаЦБ.ТипКупона = Перечисления.ТипыКупонов.Плавающий И ВыборкаЦБ.ДатаБлижКупона=ВыборкаЦБ.ДатаДоходности) Тогда
		
			ВыборкаДетальныеЗаписи = ВыборкаЦБ.Выбрать();
			
			ТаблицаОблигации.Очистить();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НовСтрока=ТаблицаОблигации.Добавить(); 
				ЗаполнитьЗначенияСвойств(НовСтрока, ВыборкаДетальныеЗаписи);
			КонецЦикла;
			
			ДоходностьКПогашению = ЧИСТВНДОХ(ТаблицаОблигации,,,,100)*100;
						
		Иначе
			
		    ДоходностьКПогашению = 0;
			
		КонецЕсли; 
		
		РаботаСРегистрами.СоздатьДоходностьОблигации(ВыборкаЦБ.Облигация, Дата,ДоходностьКПогашению, КупоннаяДоходность); 
	КонецЦикла;

КонецПроцедуры
 

Процедура РассчетКупоннойДоходностиОблигаций(Дата) 

	// БлижайшийКупон /(цена+НКД)*365/Купоныйпериод
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦенныеБумаги.Ссылка КАК Облигация,
		|	ЦенныеБумаги.ПериодКупона КАК ПериодКупона
		|ПОМЕСТИТЬ СписокОблигаций
		|ИЗ
		|	Справочник.ЦенныеБумаги КАК ЦенныеБумаги
		|ГДЕ
		|	ЦенныеБумаги.ВидЦБ = &ВидЦБОблигация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Облигация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокОблигаций.Облигация КАК Облигация,
		|	СписокОблигаций.ПериодКупона КАК ПериодКупона,
		|	ЕСТЬNULL(КупоныОблигацийСрезПервых.СуммаКупона, 0) КАК СуммаКупона,
		|	ЕСТЬNULL(КотировкиСрезПоследних.Цена, 0) * ЕСТЬNULL(НоминалыОблигацийСрезПоследних.СуммаНоминала, 0) / 100 КАК Цена,
		|	ЕСТЬNULL(КотировкиСрезПоследних.НКД, 0) КАК НКД,
		|	КотировкиСрезПоследних.Период КАК Период
		|ИЗ
		|	СписокОблигаций КАК СписокОблигаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КупоныОблигаций.СрезПервых(
		|				&ДатаПокупки,
		|				ЦБ В
		|					(ВЫБРАТЬ
		|						СписокОблигаций.Облигация КАК Облигация
		|					ИЗ
		|						СписокОблигаций КАК СписокОблигаций)) КАК КупоныОблигацийСрезПервых
		|		ПО СписокОблигаций.Облигация = КупоныОблигацийСрезПервых.ЦБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Котировки.СрезПоследних(
		|				&ДатаПокупки,
		|				ЦБ В
		|					(ВЫБРАТЬ
		|						СписокОблигаций.Облигация КАК Облигация
		|					ИЗ
		|						СписокОблигаций КАК СписокОблигаций)) КАК КотировкиСрезПоследних
		|		ПО СписокОблигаций.Облигация = КотировкиСрезПоследних.ЦБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоминалыОблигаций.СрезПоследних КАК НоминалыОблигацийСрезПоследних
		|		ПО СписокОблигаций.Облигация = НоминалыОблигацийСрезПоследних.ЦБ";
	
	Запрос.УстановитьПараметр("ВидЦБОблигация", Перечисления.ВидыЦБ.Облигация);
	Запрос.УстановитьПараметр("ДатаПокупки", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НачалоДня(ВыборкаДетальныеЗаписи.Период) <> НачалоДня(Дата) Тогда // Нет котировки на указанную дату
			Продолжить;	
		КонецЕсли;
		// КупоннаяДоходность = БлижайшийКупон /(цена+НКД)*365/Купоныйпериод
		Если (ВыборкаДетальныеЗаписи.Цена+ВыборкаДетальныеЗаписи.НКД)<>0 И ВыборкаДетальныеЗаписи.ПериодКупона <> 0 Тогда
		
			КупоннаяДоходность = ВыборкаДетальныеЗаписи.СуммаКупона / (ВыборкаДетальныеЗаписи.Цена+ВыборкаДетальныеЗаписи.НКД) * 365 / ВыборкаДетальныеЗаписи.ПериодКупона * 100;
		    РаботаСРегистрами.СоздатьДоходностьОблигации(ВыборкаДетальныеЗаписи.Облигация, Дата,,КупоннаяДоходность);
		КонецЕсли;
		
	КонецЦикла;
	


КонецПроцедуры
 

// Реализация функции Excel "ЧИСТВНДОХ"
//
//Параметры:
// ТаблицаИсточник - ТаблицаЗначений
// ИмяКолонкиПериод - Строка
// ИмяКолонкиСумма - Строка
// Точность - Число
//
//Возвращаемое значение: 
//    Число
//
Функция ЧИСТВНДОХ(ТаблицаИсточник, ИмяКолонкиПериод = "Период", ИмяКолонкиСумма = "Сумма", Точность = 0.001, МаксИтераций=10000)

    Если ТаблицаИсточник.Итог(ИмяКолонкиСумма) = 0 Тогда
        Возврат 0;        
    КонецЕсли; 
    
    ТаблицаРасчета = Новый ТаблицаЗначений;
    ТаблицаРасчета.Колонки.Добавить("Дата");
    ТаблицаРасчета.Колонки.Добавить("РазностьДат");
    ТаблицаРасчета.Колонки.Добавить("Сумма");
    
    ПерваяДата = НачалоДня(ТаблицаИсточник[0][ИмяКолонкиПериод]);
    
    Для каждого СтрокаИсточник Из ТаблицаИсточник Цикл        
        ТекДата = СтрокаИсточник[ИмяКолонкиПериод];
        
        СтрокаРасчета = ТаблицаРасчета.Добавить();
        СтрокаРасчета.Дата = ТекДата;
        СтрокаРасчета.РазностьДат = (НачалоДня(ТекДата) - ПерваяДата) / (24 * 60 * 60) / 365;
        СтрокаРасчета.Сумма = СтрокаИсточник[ИмяКолонкиСумма];        
    КонецЦикла; 
    
    ПСК = 0.1;
    Сумма = 0;
    Для каждого СтрокаРасчета Из ТаблицаРасчета Цикл
        Сумма = Сумма + СтрокаРасчета.Сумма / Pow(1 + ПСК, СтрокаРасчета.РазностьДат)
        
    КонецЦикла; 
     
    Если Сумма > 0 Тогда
        Шаг = 0.382 * ПСК;
    Иначе
        Шаг = -0.382 * ПСК;
    КонецЕсли;

	НомерИтерации = 0;
	
    Пока (Шаг < -Точность) ИЛИ (Шаг > Точность) Цикл
        ПСК = ПСК + Шаг;
        Сумма = 0;
        Для каждого СтрокаРасчета Из ТаблицаРасчета Цикл
            Сумма = Сумма + СтрокаРасчета.Сумма / Pow(1 + ПСК, СтрокаРасчета.РазностьДат)
            
        КонецЦикла;
        Если Сумма * Шаг < 0 Тогда
            Шаг = -Шаг * 0.382;//из метода золотого сечения
		КонецЕсли;
		
		Если НомерИтерации>МаксИтераций И ((Шаг < -Точность) ИЛИ (Шаг > Точность)) Тогда // Предельное количество итераций
			Возврат 0;	
		КонецЕсли;
		
		НомерИтерации = НомерИтерации + 1;
		
    КонецЦикла;
    Возврат ПСК;
КонецФункции
 