// Загружает отчет брокера ВТБ
//
// Параметры:
//  ИмяФайла  - Строка - Имя файла на сервере для загрузки
//                 
//
Процедура ЗагрузитьОтчет(ИмяФайла, БрокерскийСчет, ЗагруженоСделок, ВсегоСделок) Экспорт

	//ИмяФайла = "C:\Users\Andrey\Documents\1C\МоиАктивы\ЗагрузкаXML\GetBrokerReport.xml";
	
	// Реализуем последовательное чтение файла порциями, дабы не переполнять память, но и уменьшить количество запросов в цикле
	// Количество одновременно записываемых данных регулируется константой
	// Определенное количество записей читаем в таблицу значений
	// Проверяем их махом на уникальность, находим ссылки на ценную бумагу, формируем документы
	
	ЗагруженоСделок = 0;
	ВсегоСделок = 0;
	
	ИмяФайлаСхемы = "C:\Users\Andrey\Documents\1C\МоиАктивы\ЗагрузкаXML\GetBrokerReport_1c.xsd";	
	
	//ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
	//СтрокаXML = ЧтениеТекста.Прочитать();
	
	//СхемаXMLВТБ = Новый СхемаXML;
	////СхемаXMLВТБ.ПространствоИмен = "report577p_v1";
	//СхемаXMLВТБ.РасположениеСхемы=ИмяФайлаСхемы;

	//НаборСхемXMLВТБ=Новый НаборСхемXML;
	//НаборСхемXMLВТБ.Добавить(СхемаXMLВТБ);
	
	ЧтениеXMLФайл = Новый ЧтениеXML;
	ЧтениеXMLФайл.ОткрытьФайл(ИмяФайла,,); // Как добавить схему, да еще из пакета????
	
	
	// Получаем типы из свойств
	// Хотя можно просто создать тип ЗавершеннаяСделка
	ПакетВТБ=ФабрикаXDTO.Пакеты.Получить("report577p_v1");
	ТипReport=ПакетВТБ.КорневыеСвойства.Получить("Report").Тип;
	ТипЗавершенныеСделки = ТипReport.Свойства.Получить("ЗавершенныеСделки").Тип;
	ТипСписокЗавершенныхСделок = ТипЗавершенныеСделки.Свойства.Получить("СписокСделок").Тип;
	ТипЗавершеннаяСделка = ТипСписокЗавершенныхСделок.Свойства.Получить("Сделка").Тип;
	
	// Создаем таблицу значений
	ТипЧисло102 = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,2));
	ТипСтрока = Новый ОписаниеТипов("Строка");
	ТипДата = Новый ОписаниеТипов("Дата");
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ISIN", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(12)));
	ТЗ.Колонки.Добавить("ТипСделки", ТипСтрока);
	ТЗ.Колонки.Добавить("ДатаСделки", ТипДата);
	ТЗ.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0)));
	ТЗ.Колонки.Добавить("ВалютаЦены", ТипСтрока);
	ТЗ.Колонки.Добавить("Цена", ТипЧисло102);
	ТЗ.Колонки.Добавить("ВалютаРасчетов", ТипСтрока);
	ТЗ.Колонки.Добавить("СуммаСделки", ТипЧисло102);
	ТЗ.Колонки.Добавить("НКД", ТипЧисло102);
	ТЗ.Колонки.Добавить("КомиссияЗаРасчет", ТипЧисло102);
	ТЗ.Колонки.Добавить("КомиссияЗаЗаключение", ТипЧисло102);
	ТЗ.Колонки.Добавить("ДатаПоставки", ТипДата);
	ТЗ.Колонки.Добавить("ДатаОплаты", ТипДата);
	ТЗ.Колонки.Добавить("НомерЗаявки", ТипСтрока);
	ТЗ.Колонки.Добавить("НомерСделки", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(15)));
	
	КоличествоЗаписей = 0;
	КоличествоНаПакет = Константы.КоличествоЗаписейВПорцииЗагрузки.Получить();
	
	
	Пока ЧтениеXMLФайл.Прочитать() Цикл
	
		Если ЧтениеXMLФайл.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ЧтениеXMLФайл.Имя = "Подробности10" Тогда // завершенная сделка
			
				хЗавершеннаяСделка = ФабрикаXDTO.ПрочитатьXML(ЧтениеXMLФайл, ТипЗавершеннаяСделка);
				//Инструмент = хЗавершеннаяСделка.Инструмент;
				ISIN = СокрЛП(СтрРазделить(хЗавершеннаяСделка.Инструмент, ",")[2]);
				НоваяСтрока=ТЗ.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,хЗавершеннаяСделка);
				НоваяСтрока.ISIN = ISIN;
				
				КоличествоЗаписей = КоличествоЗаписей + 1;
				ВсегоСделок = ВсегоСделок + 1;
				Если КоличествоЗаписей >= КоличествоНаПакет Тогда
				
					// Записываем порцию
					СоздатьДокументыСделок(ТЗ, БрокерскийСчет, ЗагруженоСделок);
					ТЗ.Очистить();
					КоличествоЗаписей = 0;
				
				КонецЕсли; 
				
			КонецЕсли; 
			
		
		КонецЕсли; 	
	
	КонецЦикла;
	
	ЧтениеXMLФайл.Закрыть();
	
	Если ТЗ.Количество()>0 Тогда
	
		СоздатьДокументыСделок(ТЗ, БрокерскийСчет, ЗагруженоСделок);
	
	КонецЕсли; 
	
	//Пакет=ФабрикаXDTO.Пакеты.Получить("report577p_v1");
	//СвойствоReport=Пакет.КорневыеСвойства.Получить("Report");	
	//
	//Report = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, СвойствоReport.Тип);
	
	//Объект.СписокСделок.Очистить();	
	//
	//// Список сделок
	//Для каждого Сделка Из Report.ЗавершенныеСделки.СписокСделок.Сделка Цикл
	//
	//	НоваяСтрока=Объект.СписокСделок.Добавить();
	//	НоваяСтрока.Инструмент  = Сделка.Инструмент;
	//	НоваяСтрока.ТипСделки = Сделка.ТипСделки;
	//	НоваяСтрока.ДатаСделки = Сделка.ДатаСделки;
	//	НоваяСтрока.Количество = Сделка.Количество;
	//	НоваяСтрока.Цена = Сделка.Цена;
	//	НоваяСтрока.СуммаСделки = Сделка.СуммаСделки;
	//
	//КонецЦикла; 

КонецПроцедуры

// Создает документы покупки и продажи по таблице значений
// Контроль уникальности по номеру сделки
Процедура СоздатьДокументыСделок(ТЗ, БрокерскийСчет, ЗагруженоСделок)

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.ТипСделки КАК ТипСделки,
		|	ТЗ.ISIN КАК ISIN,
		|	ТЗ.ДатаСделки КАК ДатаСделки,
		|	ТЗ.Количество КАК Количество,
		|	ТЗ.Цена КАК Цена,
		|	ТЗ.СуммаСделки КАК СуммаСделки,
		|	ТЗ.НКД КАК НКД,
		|	ТЗ.НомерЗаявки КАК НомерЗаявки,
		|	ТЗ.НомерСделки КАК НомерСделки,
		|	ТЗ.КомиссияЗаРасчет КАК КомиссияЗаРасчет,
		|	ТЗ.КомиссияЗаЗаключение КАК КомиссияЗаЗаключение,
		|	ТЗ.ДатаПоставки КАК ДатаПоставки,
		|	ТЗ.ДатаОплаты КАК ДатаОплаты
		|ПОМЕСТИТЬ ДанныеФайла
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеФайла.ТипСделки КАК ТипСделки,
		|	ДанныеФайла.ISIN КАК ISIN,
		|	ДанныеФайла.ДатаСделки КАК ДатаСделки,
		|	ДанныеФайла.Количество КАК Количество,
		|	ДанныеФайла.Цена КАК Цена,
		|	ДанныеФайла.СуммаСделки КАК СуммаСделки,
		|	ДанныеФайла.НКД КАК НКД,
		|	ДанныеФайла.НомерЗаявки КАК НомерЗаявки,
		|	ДанныеФайла.НомерСделки КАК НомерСделки,
		|	ДанныеФайла.КомиссияЗаРасчет КАК КомиссияЗаРасчет,
		|	ДанныеФайла.КомиссияЗаЗаключение КАК КомиссияЗаЗаключение,
		|	ДанныеФайла.ДатаПоставки КАК ДатаПоставки,
		|	ДанныеФайла.ДатаОплаты КАК ДатаОплаты,
		|	ЦенныеБумаги.Ссылка КАК ЦеннаяБумага
		|ПОМЕСТИТЬ ДанныеФайлаСЦБ
		|ИЗ
		|	ДанныеФайла КАК ДанныеФайла
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЦенныеБумаги КАК ЦенныеБумаги
		|		ПО ДанныеФайла.ISIN = ЦенныеБумаги.ISIN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеФайлаСЦБ.ТипСделки КАК ТипСделки,
		|	ДанныеФайлаСЦБ.ISIN КАК ISIN,
		|	ДанныеФайлаСЦБ.ДатаСделки КАК Дата,
		|	ДанныеФайлаСЦБ.Количество КАК Количество,
		|	ДанныеФайлаСЦБ.Цена КАК Цена,
		|	ДанныеФайлаСЦБ.СуммаСделки КАК Сумма,
		|	ДанныеФайлаСЦБ.НКД КАК НКД,
		|	ДанныеФайлаСЦБ.НомерЗаявки КАК НомерЗаявки,
		|	ДанныеФайлаСЦБ.НомерСделки КАК НомерСделки,
		|	ДанныеФайлаСЦБ.КомиссияЗаРасчет КАК КомиссияЗаРасчет,
		|	ДанныеФайлаСЦБ.КомиссияЗаЗаключение КАК КомиссияЗаЗаключение,
		|	ДанныеФайлаСЦБ.ДатаПоставки КАК ВремяПоставки,
		|	ДанныеФайлаСЦБ.ДатаОплаты КАК ВремяПлатежа,
		|	ДанныеФайлаСЦБ.ЦеннаяБумага КАК ЦеннаяБумага,
		|	ДанныеФайлаСЦБ.КомиссияЗаРасчет + ДанныеФайлаСЦБ.КомиссияЗаЗаключение КАК Комиссия
		|ИЗ
		|	ДанныеФайлаСЦБ КАК ДанныеФайлаСЦБ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПокупкаЦеннойБумаги КАК ПокупкаЦеннойБумаги
		|		ПО ДанныеФайлаСЦБ.НомерСделки = ПокупкаЦеннойБумаги.НомерСделки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПродажаЦеннойБумаги КАК ПродажаЦеннойБумаги
		|		ПО ДанныеФайлаСЦБ.НомерСделки = ПродажаЦеннойБумаги.НомерСделки
		|ГДЕ
		|	ПокупкаЦеннойБумаги.Ссылка ЕСТЬ NULL
		|	И ПродажаЦеннойБумаги.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Создать документ
		Если ВыборкаДетальныеЗаписи.ТипСделки = "Покупка" Тогда
		
			НовыйДокумент = Документы.ПокупкаЦеннойБумаги.СоздатьДокумент();
		
		ИначеЕсли ВыборкаДетальныеЗаписи.ТипСделки = "Продажа" Тогда
			
			НовыйДокумент = Документы.ПродажаЦеннойБумаги.СоздатьДокумент();
			
		Иначе // Ошибка, хотя это можно контролировать схемой xml
			
			Продолжить;
		
		КонецЕсли;

		НовыйДокумент.БрокерскийСчет = БрокерскийСчет;
		ЗаполнитьЗначенияСвойств(НовыйДокумент, ВыборкаДетальныеЗаписи);
		НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
		ЗагруженоСделок = ЗагруженоСделок + 1;
		Набор = Последовательности.ПоследовательностьДляЗагрузки.СоздатьНаборЗаписей();
		
	КонецЦикла;
	

		

КонецПроцедуры
 

