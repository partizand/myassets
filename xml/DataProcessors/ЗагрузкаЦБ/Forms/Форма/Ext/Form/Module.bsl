
&НаСервере
Процедура ЗагрузитьНаСервере()
	ИмяФайла = "C:\Users\Andrey\Documents\1C\МоиФинансы\securities-ofz-market.csv";
	ИмяФайлаАкции = "C:\Users\Andrey\Documents\1C\МоиФинансы\securities-акции.csv";
	ЗагрузкаДанных.ЗагрузитьЦБ(ИмяФайла, Истина);
	ЗагрузкаДанных.ЗагрузитьЦБ(ИмяФайлаАкции, Истина);
	//Об = РеквизитФормыВЗначение("Объект");
	//Об.ЗагрузитьЦБ(ИмяФайла);
	//Об.ЗагрузитьЦБ(ИмяФайлаАкции);
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	//ЗагрузитьНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработкаОкончанияПомещения", ЭтотОбъект);
	
	НачатьПомещениеФайла(ОповещениеОЗавершении,,,Истина,УникальныйИдентификатор);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПосчитатьДоходностьНаСервере()
	Рассчет.РасчитатьДоходностьОблигаций(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьДоходность(Команда)
	ПосчитатьДоходностьНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьССайтаНаСервере(ЗагружатьОФЗ, ЗагружатьКорпОблигации, ЗагружатьАкции)
	ЗагрузкаДанных.ЗагрузитьБумагиИКотировкиСММВБ(ЗагружатьОФЗ, ЗагружатьКорпОблигации, ЗагружатьАкции);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьССайта(Команда)
	ЗагрузитьССайтаНаСервере(ЗагружатьОФЗ, ЗагружатьКорпОблигации, ЗагружатьАкции);
КонецПроцедуры

&НаСервере
Процедура ОбработкаОкончанияПомещения(Результат, Адрес, ПомещаемыйФайл, ДополнительныеПараметры) Экспорт
	
	
	Если Результат Тогда
	
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		ИмяФайла = ПолучитьИмяВременногоФайла("csv");
		ДвоичныеДанные.Записать(ИмяФайла);
		//ЗаполнитьТЧ(ИмяФайла);
		Объект.СписокБумаг.Очистить();
		РаботаСРегистрами.ОчиститьЗагрузкуБумаг();
		ЗагрузкаДанных.ЗагрузитьЦБ(ИмяФайла, Истина, Объект.СписокБумаг, НеЗаполнятьДанные);  // Заполняем список бумаг
		Элементы.ДинСписок.Обновить();
	КонецЕсли; 	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧ(ИмяФайла)

	Разделитель = ";";
	
	К_Код = "SECID";
	К_Наименование= "SHORTNAME"; // Короткое наименование
	К_ПолНаимен="SECNAME";  // Полное наименование
	К_ТипЦБ="INSTRID"; // Тип ценной бумаги
	// EQIN - акция и ДР
	// IFTF - etf
	// IFA1 - пай
	// EILD - акция
	// GOFZ - ОФЗ
	// BOBR - КОБР облигация
	// EIUS - Еврооблигация
	К_Статус="STATUS"; // Статус
	// A - активна
	// N - неактивна
	К_КодТипаБумаги = "SECTYPE"; //Код типа бумаги
	// 1 - акция обыкновенная
	// 2 - акция привелегир
	// D - ГДР
	// 5 - КОБР облигация
	// 3 - ОФЗ
	// 8 - Корп облигация ?
	// 6 - еврооблигация
	К_РазмерЛота="LOTSIZE";
	К_ДатаПогашения = "MATDATE"; // Дата погашения для облигации
	К_Точность = "DECIMALS"; // Знаков после запятой
	К_ПериодКупона = "COUPONPERIOD"; // Период купона, дней. Для облигаций
	К_ПроцентКупона = "COUPONPERCENT"; // Процент купона к номиналу, для облигаций
	К_Номинал= "FACEVALUE"; // размер лота для облигаций, для частичного погашения неправильный!
	К_ДатаБлижКупона = "NEXTCOUPON"; // Дата ближайшего купона
	К_РазмерКупона = "COUPONVALUE";
	К_ШагЦены = "MINSTEP";
	К_ОбъемВыпуска = "ISSUESIZE"; // Объем выпуска
	К_ОбъемВОбращении = "ISSUESIZEPLACED"; //Объем в обращении;Количество ценных бумаг в обращении
	К_Валюта = "CURRENCYID";
	// SUR - Рубль
	// USD - доллар
	К_ДатаПоследнихТоргов = "PREVDATE"; // Дата последних торгов
	// Цены
	К_СредневзвешЦена = "PREVWAPRICE"; // Средневзвешенная цена предыдущего дня, % к номиналу
	К_НКД = "ACCRUEDINT"; // НКД, в валюте расчетов
	К_ПоследняяЦена = "PREVPRICE"; // Цена последней сделки пред. дня, % к номиналу
	К_ЦенаЗакрытия = "PREVLEGALCLOSEPRICE"; // Официальная цена закрытия предыдущего дня
	К_ПризКотировка = "PREVADMITTEDQUOTE"; // Признаваемая котировка предыдущего дня
	
	// marketdata
	КМ_Дата = "SYSTIME"; //Время загрузки;Время загрузки данных системой
	КМ_Открытие = "OPEN"; // Цена первой сделки, % к номиналу
	КМ_Мнинмум = "LOW"; //Минимум, %;Минимальная цена сделки, % к номиналу
	КМ_Максимум = "HIGH"; //Максимум, %;Максимальная цена сделки, % к номиналу
	КМ_Последняя = "LAST"; //Цена посл., %;Цена последней сделки, %
	КМ_СредневзвешЦена = "WAPRICE"; //Срвзв. цена, %;Средневзвешенная цена, % к номиналу
	
	СписокКолонок = Новый Массив;
	
	СодержимоеФайла = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.ANSI);
	
	СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
	
	

	ДатаКотировки = Неопределено;
	НоваяБумага = Ложь;
	ЗагрузкаБумаг = Истина; // Если ложь, загрузка цен
	ВидБумаг = Перечисления.ВидыЦБ.Акция;
	
	Пока СтрокаФайла<>Неопределено Цикл
		
		Если СтрокаФайла="marketdata" Тогда // Конец обработки
			ЗагрузкаБумаг = Ложь;
			СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
			Продолжить;	
		КонецЕсли; 
		
		Если ПустаяСтрока(СтрокаФайла) ИЛИ СтрокаФайла="securities" Тогда // игнорируемые строки
			СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
			Продолжить;	
		КонецЕсли; 
		
		Если СтрНачинаетсяС(СтрокаФайла, "SECID") Тогда // это названия колонок
			СписокКолонок = СтрРазделить(СтрокаФайла, Разделитель);
			// Определяем вид бумаг, есть ли колонка дата погашения
			Если СписокКолонок.Найти(К_ДатаПогашения)=Неопределено Тогда // Акция
			
				ВидБумаг = Перечисления.ВидыЦБ.Акция;
			
			Иначе  // Облигация
			
				ВидБумаг = Перечисления.ВидыЦБ.Облигация;
			
			КонецЕсли;  
			СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
			Продолжить;	
		КонецЕсли;
		
		СписокЗначений = СтрРазделить(СтрокаФайла, Разделитель);
		
		// Код и ссылка
		
		Код = СписокЗначений[СписокКолонок.Найти(К_Код)];
		
		Если ЗагрузкаБумаг Тогда 		// Читаем данные бумаги

			
			// Активность
			Если СписокЗначений[СписокКолонок.Найти(К_Статус)]="N" Тогда // бумага неактивна
				СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
				Продолжить;	
			КонецЕсли;
			
			// Только рубли
			Если СписокЗначений[СписокКолонок.Найти(К_Валюта)]<>"SUR" Тогда // Не рубли
				СтрокаФайла = СодержимоеФайла.ПрочитатьСтроку();
				Продолжить;	
			КонецЕсли;
			
			Наименование = СписокЗначений[СписокКолонок.Найти(К_Наименование)];
			Цена = СписокЗначений[СписокКолонок.Найти(К_ЦенаЗакрытия)];
			
			НовСтрока = Объект.СписокБумаг.Добавить();
			
			НовСтрока.Код = Код;
			НовСтрока.Наименование = СписокЗначений[СписокКолонок.Найти(К_Наименование)];
			НовСтрока.Цена = СписокЗначений[СписокКолонок.Найти(К_ЦенаЗакрытия)];
			НовСтрока.ДатаПрошлая = СписокЗначений[СписокКолонок.Найти(К_ДатаПоследнихТоргов)];
			Индекс = СписокКолонок.Найти(К_НКД);
			Если Индекс<>Неопределено Тогда
			
				НовСтрока.НКД = СписокЗначений[Индекс];
			
			КонецЕсли; 

			
			
		
		Иначе  // Читаем цену
		    Отбор = Новый Структура("Код", Код);
			СписокСтрок = Объект.СписокБумаг.НайтиСтроки(Отбор);
			
			Если СписокСтрок.Количество() > 0 Тогда
			
				СписокСтрок[0].ЦенаТекущая = СписокЗначений[СписокКолонок.Найти(КМ_Последняя)];	
			    СписокСтрок[0].ДатаТекущая = СписокЗначений[СписокКолонок.Найти(КМ_Дата)];
			КонецЕсли; 
			
		
		КонецЕсли; 
		
		СтрокаФайла=СодержимоеФайла.ПрочитатьСтроку();
	
	КонецЦикла; 

КонецПроцедуры
 