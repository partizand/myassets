
Процедура ОбработкаПроведения(Отказ, Режим)

	
	// Старая без контроля
	Движения.Личный.Записывать = Истина;
	Движения.Личный.Записать();
	
	
	// Блокировки
	// Нужны при контроле остатка или при валютном обмене
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеСредств.СчетКт КАК СчетКт,
	|	ДвижениеСредств.СчетКт.Валюта КАК СчетКтВалюта,
	|	ДвижениеСредств.СчетКт.Валюта.Представление КАК СчетКтВалютаПредставление,
	|	ДвижениеСредств.СчетДт КАК СчетДт,
	|	ДвижениеСредств.СчетДт.Валюта КАК СчетДтВалюта,
	|	ДвижениеСредств.СчетДт.Валютный КАК СчетДтВалютный,
	|	ДвижениеСредств.СчетКт.Валютный КАК СчетКтВалютный,
	|	ВЫБОР
	|		КОГДА ДвижениеСредств.СчетДт.Вид = &Активный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиДт.СуммаОстатокДт, 0)
	|		КОГДА ДвижениеСредств.СчетДт.Вид = &Пассивный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиДт.СуммаОстатокКт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ЛичныйОстаткиДт.СуммаОстаток, 0)
	|	КОНЕЦ КАК ОстатокДт,
	|	ВЫБОР
	|		КОГДА ДвижениеСредств.СчетДт.Вид = &Активный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиДт.СуммаВалОстатокДт, 0)
	|		КОГДА ДвижениеСредств.СчетДт.Вид = &Пассивный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиДт.СуммаВалОстатокКт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ЛичныйОстаткиДт.СуммаВалОстаток, 0)
	|	КОНЕЦ КАК ОстатокДтВал,
	|	ВЫБОР
	|		КОГДА ДвижениеСредств.СчетКт.Вид = &Активный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиКт.СуммаОстатокДт, 0)
	|		КОГДА ДвижениеСредств.СчетКт.Вид = &Пассивный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиКт.СуммаОстатокКт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ЛичныйОстаткиКт.СуммаОстаток, 0)
	|	КОНЕЦ КАК ОстатокКт,
	|	ВЫБОР
	|		КОГДА ДвижениеСредств.СчетКт.Вид = &Активный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиКт.СуммаВалОстатокДт, 0)
	|		КОГДА ДвижениеСредств.СчетКт.Вид = &Пассивный
	|			ТОГДА ЕСТЬNULL(ЛичныйОстаткиКт.СуммаВалОстатокКт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ЛичныйОстаткиКт.СуммаВалОстаток, 0)
	|	КОНЕЦ КАК ОстатокКтВал,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК Курс
	|ИЗ
	|	Документ.ДвижениеСредств КАК ДвижениеСредств
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Личный.Остатки(&МоментВремени, Счет = &СчетКт, , ) КАК ЛичныйОстаткиКт
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Личный.Остатки(&МоментВремени, Счет = &СчетДт, , ) КАК ЛичныйОстаткиДт
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(
	|				&МоментВремени,
	|				Валюта = &ВалютаКурса
	|					И Период = &ДатаКурса) КАК КурсыВалютСрезПоследних
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДвижениеСредств.Ссылка = &Ссылка"; 
	
	ДатаКурса = НачалоДня(Дата);

	ЗаполнитьПараметрыСубконто(Запрос, "Кт", СубконтоКт);
	ЗаполнитьПараметрыСубконто(Запрос, "Дт", СубконтоДт);

	
	Запрос.УстановитьПараметр("Активный",  ВидСчета.Активный);
	Запрос.УстановитьПараметр("Пассивный", ВидСчета.Пассивный);
	Запрос.УстановитьПараметр("ДатаКурса", ДатаКурса);
	Запрос.УстановитьПараметр("ВалютаКурса", СчетДт.Валюта);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СчетДт", СчетДт);
	Запрос.УстановитьПараметр("СчетКт", СчетКт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// регистр Личный 
		Движение = Движения.Личный.Добавить();
		Движение.Период = Дата;
		Движение.СчетДт = СчетДт;
		Движение.СчетКт = СчетКт;
		
		ЗаполнитьСубконтоСчетаДвижения(Движение.СубконтоДт, СубконтоДт);
		ЗаполнитьСубконтоСчетаДвижения(Движение.СубконтоКт, СубконтоКт);
		
		// Схема обмена валют, движений по между валютными счетами
		// ВалютаКт - ВалютаДт (рубль=основная валюта, Валюта= не основная валюта)
		// Рубль - Рубль 	Сумма=Сумма, СуммаВал нет  
		// Рубль - Валюта	Сумма=Сумма, СуммаВалДт=СуммаВал
		// Валюта - Рубль 	Сумма в валюте, Сумма=СуммаВал, СуммаВалКт=Сумма
		// Валюта - Валюта	Сумма в валюте, Сумма=Сумма*Курс(ВалютаКт на дату документа), СуммаВалКт=Сумма, СуммаВалДт=СуммаВал
		
		// Сумма баланса при пополнеии записывается от сделки и в последствии не пересчитывается на нереализованные курсовые разницы
		// При списании сумма баланса списывается пропорционально остатку валюты, реализованные курсовые разницы записываются на отдельный счет
		
		// Курсовые разницы не реализованы! А надо бы
		
		Если НЕ ВыборкаДетальныеЗаписи.СчетКтВалютный Тогда
		
			Движение.Сумма = Сумма;
			
			Если ВыборкаДетальныеЗаписи.СчетДтВалютный Тогда  // Рубль - Валюта
			
				Движение.СуммаВалДт = СуммаВал;
				
				// Курсовые разницы не учитываются, т.к. это пополнение валютного счета
				
			
			КонецЕсли; 
		
		Иначе
		
			Если НЕ ВыборкаДетальныеЗаписи.СчетДтВалютный Тогда // Валюта - Рубль
			
				Движение.Сумма = СуммаВал;
				Движение.СуммаВалКт = Сумма;
				// Списание с валютного счета, нужно учесть реализованные курсовые разницы
				
				СчетПрибУб = ПланыСчетов.Личный.НайтиПоРеквизиту("ВидСчета", Справочники.ВидыСчетов.КурсовыеРазницы);
				Если СчетПрибУб=ПланыСчетов.Личный.ПустаяСсылка() Тогда
				
					Отказ=Истина;
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Не задан счет курсовых разниц. Создайте один счет с типом курсовые разницы";
					//Сообщение.Поле = "";
					//Сообщение.УстановитьДанные();
					Сообщение.Сообщить();
					
					Возврат;
				
				КонецЕсли;
				
				// Сумма списания рублей с валютного счета - пропорциально остатку валюты, остальное ПрибыльУбыток
				СуммаСписания = СуммаВал; // Общая сумма списание в руб по проводке
				СуммаСписанияВал = Сумма; // СуммаВал
				СуммаСписанияДт = ?(СуммаСписанияВал=ВыборкаДетальныеЗаписи.ОстатокДтВал, ВыборкаДетальныеЗаписи.ОстатокДт,
					         СуммаСписанияВал/ВыборкаДетальныеЗаписи.ОстатокДтВал * ВыборкаДетальныеЗаписи.ОстатокДт); // Сколько списать суммы баланса с валютного счета
							 
				Если СуммаСписанияДт>СуммаСписания Тогда // Убыток
					
					// Убыток
					ДвижениеКурс = Движения.Личный.Добавить();
					ДвижениеКурс.Период = Дата;
					ДвижениеКурс.СчетДт = СчетПрибУб;
					ДвижениеКурс.СчетКт = СчетДт;
					ДвижениеКурс.Сумма = СуммаСписанияДт-СуммаСписания;
					ЗаполнитьСубконтоСчетаДвижения(ДвижениеКурс.СубконтоКт, СубконтоДт);
					// А еще могут быть субконто у ПрибУб!
					ЗаполнитьСубконтоКурсовыхРазниц(Отказ,СчетПрибУб,ДвижениеКурс.СубконтоДт, ВыборкаДетальныеЗаписи.СчетКтВалюта);
				
				ИначеЕсли СуммаСписанияДт<СуммаСписания Тогда // Прибыль
					
					// Прибыль
					ДвижениеКурс = Движения.Личный.Добавить();
					ДвижениеКурс.Период = Дата;
					ДвижениеКурс.СчетДт = СчетДт;
					ДвижениеКурс.СчетКт = СчетПрибУб;
					ДвижениеКурс.Сумма = СуммаСписания-СуммаСписанияДт;
					ЗаполнитьСубконтоСчетаДвижения(ДвижениеКурс.СубконтоДт, СубконтоДт);
					// А еще могут быть субконто у ПрибУб!
					ЗаполнитьСубконтоКурсовыхРазниц(Отказ,СчетПрибУб,ДвижениеКурс.СубконтоКт, ВыборкаДетальныеЗаписи.СчетКтВалюта);
				
				КонецЕсли;
				
				Если Отказ Тогда
				
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Неизвестное субконто на счете курсовых разниц "+СчетПрибУб+". Пока доступно только субконто вида Валюта";
					Сообщение.Сообщить();
					Возврат;
				
				КонецЕсли; 
			
			Иначе  // Валюта - Валюта
				
				// Тут вообще пока неясно что
				
				Курс = ВыборкаДетальныеЗаписи.Курс;
				
				Если Курс=0 Тогда
				
					Отказ=Истина;
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Нет курса валюты "+ СчетКт.Валюта +" на дату "+ДатаКурса;
					//Сообщение.Поле = "";
					//Сообщение.УстановитьДанные();
					Сообщение.Сообщить(); 
				    Возврат;
				КонецЕсли; 
			
			КонецЕсли; 
		
		КонецЕсли;
		
	КонецЦикла;
	

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


Процедура ЗаполнитьСубконтоКурсовыхРазниц(Отказ, СчетПрибУб, СписокСубконтоДвижения, Валюта)
	
	//СчетПрибУб = ПланыСчетов.Личный.НайтиПоКоду("3");
	Для каждого ВидСубконто Из СчетПрибУб.ВидыСубконто Цикл
		
		Если ВидСубконто=ПланыВидовХарактеристик.ВидыСубконто.Валюта Тогда
		
			СписокСубконтоДвижения.Вставить(ВидСубконто, Валюта);	
		
		Иначе
		
			Отказ=Истина;
		
		КонецЕсли; 
		
			
	
	КонецЦикла; 
	

КонецПроцедуры


// Заполняет список субконто счета из табличной части
//
// Параметры:
//  СписокСубконтоДвижения	 -  РегистрБухгалтерииСубконто.<Имя регистра бухгалтерии>	 -  Субконто счета типа Движение.СубконтоДт или Движение.СубконтоКт
//  ТЧ						 - ТабличнаяЧасть	 - Табличная часть со значениями субконто
//
Процедура ЗаполнитьСубконтоСчетаДвижения(СписокСубконтоДвижения, ТЧ)

	Для каждого ТекСтрокаТЧ Из ТЧ Цикл
		СписокСубконтоДвижения.Вставить(ТекСтрокаТЧ.Вид, ТекСтрокаТЧ.Значение);
	КонецЦикла; 

КонецПроцедуры
 

// Изменяет текст запроса и добавляет параметры запроса для субконто из табличной части
// в тексте запроса должны использоваться параметры &МассивСубконтоКт(Дт) и &ЗначенияСубконтоКт(Дт)
// 		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Личный.Остатки(
//		|				&МоментВремени,
//		|				Счет = &СчетКт,
//		|				&МассивСубконтоКт,
//		|				&ЗначенияСубконтоКт) КАК ЛичныйОстаткиКт
//
// Параметры:
//  Запрос	 - Запрос - Запрос для изменения
//  Префикс	 - Строка	 - Префикс счета "Кт" или "Дт"
//  ТЧ		 - ТабличнаяЧасть	 -  Табличная часть со значениями субконто, первая колонка ВидСубконто, вторая значение
//
Процедура ЗаполнитьПараметрыСубконто(Запрос, Префикс, ТЧ)

	// СубконтоКт
	Если ТЧ.Количество()>0 Тогда // Счет имеет субконто
		
		// Массив субконто
		МассивСубконто = ТЧ.ВыгрузитьКолонку(0);
		Запрос.УстановитьПараметр("МассивСубконто"+Префикс, МассивСубконто);
		// Значения субконто
		//СтрокаЗначений = "Субконто1 = &СубконтоКт1
		//|					И Субконто2 = &СубконтоКт2
		//|					И Субконто3 = &СубконтоКт3";
		ЗначенияСубконто = ТЧ.ВыгрузитьКолонку(1);
		Индекс=1;
		СтрокаЗначений = "";
		Для каждого ЗначениеСубконто Из ЗначенияСубконто Цикл
		    Если Индекс>1 Тогда
				СтрокаЗначений = СтрокаЗначений + " И ";	
			КонецЕсли; 
			СтрокаЗначений = СтрокаЗначений + "Субконто"+Индекс+"=&Субконто"+Префикс+Индекс;
			Запрос.УстановитьПараметр("Субконто"+Префикс+Индекс, ЗначениеСубконто);

		
		КонецЦикла;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗначенияСубконто"+Префикс, СтрокаЗначений);
	
	Иначе  // Субконто нет 
	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&МассивСубконто"+Префикс, "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ЗначенияСубконто"+Префикс, "");
	
	КонецЕсли; 

КонецПроцедуры
 
