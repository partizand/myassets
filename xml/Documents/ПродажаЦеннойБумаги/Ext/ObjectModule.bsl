Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ОстаткиЦенныхБумаг старая с контролем (если не шорт)
	// Себестоимость по ФИФО
	
	// регистр ОстаткиДенежныхСредств новая без контроля
	

	Движения.ОстаткиЦенныхБумаг.Записывать = Истина;
	Движения.ОстаткиЦенныхБумаг.Записать();	
	
	Движения.ОстаткиДенежныхСредств.Записывать = Истина;

	Движения.Продажи.Записывать = Истина;
	
	
	// Блокировки
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиЦенныхБумаг");
	ЭлементБлокировки.УстановитьЗначение("БрокерскийСчет", БрокерскийСчет);
	ЭлементБлокировки.УстановитьЗначение("ЦеннаяБумага", ЦеннаяБумага);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиЦенныхБумагОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ОстаткиЦенныхБумагОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ОстаткиЦенныхБумагОстатки.Партия КАК Партия,
		|	ОстаткиЦенныхБумагОстатки.НКДОстаток КАК НКДОстаток,
		|	ОстаткиЦенныхБумагОстатки.КомиссияОстаток КАК КомиссияОстаток,
		|	ОстаткиЦенныхБумагОстатки.ЦеннаяБумага КАК ЦеннаяБумага
		|ИЗ
		|	РегистрНакопления.ОстаткиЦенныхБумаг.Остатки(
		|			&МоментВремени,
		|			БрокерскийСчет = &БрокерскийСчет
		|				И ЦеннаяБумага = &ЦеннаяБумага) КАК ОстаткиЦенныхБумагОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиЦенныхБумагОстатки.Партия.МоментВремени
		|ИТОГИ
		|	СУММА(КоличествоОстаток)
		|ПО
		|	ЦеннаяБумага";
	
	Запрос.УстановитьПараметр("БрокерскийСчет", БрокерскийСчет);
	Запрос.УстановитьПараметр("ЦеннаяБумага", ЦеннаяБумага);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЦеннаяБумага = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЦеннаяБумага.Следующий() Цикл
		
		Если Количество > ВыборкаЦеннаяБумага.КоличествоОстаток Тогда
		
			Отказ=Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ценная бумага не хватает в количестве "+(Количество - ВыборкаЦеннаяБумага.КоличествоОстаток);
			//Сообщение.Поле = "СписокПродаж["+(ВыборкаЦеннаяБумага.НомерСтроки-1)+"].Количество";
			//Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Сообщить(); 
		
		КонецЕсли; 
		
		Если Отказ Тогда
			Продолжить;	
		КонецЕсли; 
		
		ВыборкаДетальныеЗаписи = ВыборкаЦеннаяБумага.Выбрать();
		
		ОсталосьСписать = Количество;
		Себестоимость = 0;
		НКДПокупки = 0;
		КомиссияПокупки = 0;
		
		Пока ОсталосьСписать>0 И ВыборкаДетальныеЗаписи.Следующий() Цикл
			// регистр ОстаткиЦенныхБумаг Расход
			
			Движение = Движения.ОстаткиЦенныхБумаг.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.БрокерскийСчет = БрокерскийСчет;
			Движение.ЦеннаяБумага = ВыборкаДетальныеЗаписи.ЦеннаяБумага;
			Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
			Движение.Количество = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
			Движение.Сумма = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.СуммаОстаток,
				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СуммаОстаток);
				
			Движение.НКД = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.НКДОстаток,
				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.НКДОстаток);
			Движение.Комиссия = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.КомиссияОстаток,
				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.КомиссияОстаток);
				
			ОсталосьСписать = ОсталосьСписать - Движение.Количество;
			Себестоимость = Себестоимость + Движение.Сумма;
			НКДПокупки = НКДПокупки + Движение.НКД;
			КомиссияПокупки = КомиссияПокупки + Движение.Комиссия; 
		КонецЦикла;
		
		
		// регистр Продажи 
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.БрокерскийСчет = БрокерскийСчет;
		Движение.ЦеннаяБумага = ВыборкаЦеннаяБумага.ЦеннаяБумага;
		Движение.СуммаПокупки = Себестоимость;
		Движение.СуммаПродажи = Сумма;
		Движение.НКДПокупки = НКДПокупки;
		Движение.НКДПродажи = НКД;
		Движение.Комиссия = Комиссия+КомиссияПокупки; // Разделить?
		Движение.Количество = Количество;
		
	КонецЦикла;
	

	Если НЕ Отказ Тогда
	
		// регистр ОстаткиДенежныхСредств Приход
		Движение = Движения.ОстаткиДенежныхСредств.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.БрокерскийСчет = БрокерскийСчет;
		Движение.Сумма = Сумма-Комиссия+НКД; //СуммаВсегоМинусКомиссияПлюсНКД;
	
	КонецЕсли; 	



	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!


	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры


//Процедура ОбработкаПроведенияСписок(Отказ, Режим)

//	// регистр ОстаткиЦенныхБумаг старая с контролем (если не шорт)
//	// Себестоимость по ФИФО
//	
//	// регистр ОстаткиДенежныхСредств новая без контроля
//	

//	Движения.ОстаткиЦенныхБумаг.Записывать = Истина;
//	Движения.ОстаткиЦенныхБумаг.Записать();	
//	
//	Движения.ОстаткиДенежныхСредств.Записывать = Истина;

//	Движения.Продажи.Записывать = Истина;
//	
//	
//	// Блокировки
//	Блокировка = Новый БлокировкаДанных;
//	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиЦенныхБумаг");
//	ЭлементБлокировки.УстановитьЗначение("БрокерскийСчет", БрокерскийСчет);
//	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
//	ЭлементБлокировки.ИсточникДанных = СписокПродаж;
//	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ЦеннаяБумага", "ЦеннаяБумага");
//	Блокировка.Заблокировать();
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	МАКСИМУМ(ПродажаЦенныхБумагСписокПродаж.НомерСтроки) КАК НомерСтроки,
//		|	ПродажаЦенныхБумагСписокПродаж.ЦеннаяБумага КАК ЦеннаяБумага,
//		|	СУММА(ПродажаЦенныхБумагСписокПродаж.Количество) КАК Количество,
//		|	СУММА(ПродажаЦенныхБумагСписокПродаж.Сумма) КАК Сумма,
//		|	СУММА(ПродажаЦенныхБумагСписокПродаж.Комиссия) КАК Комиссия,
//		|	СУММА(ПродажаЦенныхБумагСписокПродаж.НКД) КАК НКД
//		|ПОМЕСТИТЬ ТЧ
//		|ИЗ
//		|	Документ.ПродажаЦенныхБумаг.СписокПродаж КАК ПродажаЦенныхБумагСписокПродаж
//		|ГДЕ
//		|	ПродажаЦенныхБумагСписокПродаж.Ссылка = &Ссылка
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ПродажаЦенныхБумагСписокПродаж.ЦеннаяБумага
//		|
//		|ИНДЕКСИРОВАТЬ ПО
//		|	ЦеннаяБумага
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ТЧ.НомерСтроки КАК НомерСтроки,
//		|	ТЧ.ЦеннаяБумага КАК ЦеннаяБумага,
//		|	ТЧ.Количество КАК Количество,
//		|	ТЧ.Сумма КАК Сумма,
//		|	ТЧ.Комиссия КАК Комиссия,
//		|	ТЧ.НКД КАК НКД,
//		|	ЕСТЬNULL(ОстаткиЦенныхБумагОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
//		|	ЕСТЬNULL(ОстаткиЦенныхБумагОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
//		|	ОстаткиЦенныхБумагОстатки.Партия КАК Партия,
//		|	ТЧ.ЦеннаяБумага.Представление КАК ЦеннаяБумагаПредставление,
//		|	ЕСТЬNULL(ОстаткиЦенныхБумагОстатки.НКДОстаток, 0) КАК НКДОстаток,
//		|	ЕСТЬNULL(ОстаткиЦенныхБумагОстатки.КомиссияОстаток, 0) КАК КомиссияОстаток
//		|ИЗ
//		|	ТЧ КАК ТЧ
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиЦенныхБумаг.Остатки(
//		|				&МоментВремени,
//		|				БрокерскийСчет = &БрокерскийСчет
//		|					И ЦеннаяБумага В
//		|						(ВЫБРАТЬ
//		|							ТЧ.ЦеннаяБумага КАК ЦеннаяБумага
//		|						ИЗ
//		|							ТЧ КАК ТЧ)) КАК ОстаткиЦенныхБумагОстатки
//		|		ПО ТЧ.ЦеннаяБумага = ОстаткиЦенныхБумагОстатки.ЦеннаяБумага
//		|
//		|УПОРЯДОЧИТЬ ПО
//		|	ОстаткиЦенныхБумагОстатки.Партия.МоментВремени
//		|ИТОГИ
//		|	МАКСИМУМ(НомерСтроки),
//		|	МИНИМУМ(Количество),
//		|	МИНИМУМ(Сумма),
//		|	МИНИМУМ(Комиссия),
//		|	МИНИМУМ(НКД),
//		|	СУММА(КоличествоОстаток),
//		|	СУММА(СуммаОстаток),
//		|	СУММА(НКДОстаток),
//		|	СУММА(КомиссияОстаток)
//		|ПО
//		|	ЦеннаяБумага";
//	
//	Запрос.УстановитьПараметр("БрокерскийСчет", БрокерскийСчет);
//	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
//	
//	РезультатЗапроса = Запрос.Выполнить();
//	
//	ВыборкаЦеннаяБумага = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
//	
//	Пока ВыборкаЦеннаяБумага.Следующий() Цикл
//		
//		Если ВыборкаЦеннаяБумага.Количество > ВыборкаЦеннаяБумага.КоличествоОстаток Тогда
//		
//			Отказ=Истина;
//			
//			Сообщение = Новый СообщениеПользователю;
//			Сообщение.Текст = "Ценная бумага "+ВыборкаЦеннаяБумага.ЦеннаяБумагаПредставление +" не хватает в количестве "+(ВыборкаЦеннаяБумага.Количество - ВыборкаЦеннаяБумага.КоличествоОстаток);
//			Сообщение.Поле = "СписокПродаж["+(ВыборкаЦеннаяБумага.НомерСтроки-1)+"].Количество";
//			Сообщение.УстановитьДанные(ЭтотОбъект);
//			Сообщение.Сообщить(); 
//		
//		КонецЕсли; 
//		
//		Если Отказ Тогда
//			Продолжить;	
//		КонецЕсли; 
//		
//		ВыборкаДетальныеЗаписи = ВыборкаЦеннаяБумага.Выбрать();
//		
//		ОсталосьСписать = ВыборкаЦеннаяБумага.Количество;
//		Себестоимость = 0;
//		НКДПокупки = 0;
//		КомиссияПокупки = 0;
//		
//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//			// регистр ОстаткиЦенныхБумаг Расход
//			
//			Движение = Движения.ОстаткиЦенныхБумаг.Добавить();
//			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
//			Движение.Период = Дата;
//			Движение.БрокерскийСчет = БрокерскийСчет;
//			Движение.ЦеннаяБумага = ВыборкаДетальныеЗаписи.ЦеннаяБумага;
//			Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
//			Движение.Количество = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
//			Движение.Сумма = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.СуммаОстаток,
//				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СуммаОстаток);
//				
//			Движение.НКД = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.НКДОстаток,
//				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.НКДОстаток);
//			Движение.Комиссия = ?(Движение.Количество=ВыборкаДетальныеЗаписи.КоличествоОстаток, ВыборкаДетальныеЗаписи.КомиссияОстаток,
//				Движение.Количество/ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.КомиссияОстаток);
//				
//			ОсталосьСписать = ОсталосьСписать - Движение.Количество;
//			Себестоимость = Себестоимость + Движение.Сумма;
//			НКДПокупки = НКДПокупки + Движение.НКД;
//			КомиссияПокупки = КомиссияПокупки + Движение.Комиссия; 
//		КонецЦикла;
//		
//		
//		// регистр Продажи 
//		Движение = Движения.Продажи.Добавить();
//		Движение.Период = Дата;
//		Движение.БрокерскийСчет = БрокерскийСчет;
//		Движение.ЦеннаяБумага = ВыборкаЦеннаяБумага.ЦеннаяБумага;
//		Движение.СуммаПокупки = Себестоимость;
//		Движение.СуммаПродажи = ВыборкаЦеннаяБумага.Сумма;
//		Движение.НКДПокупки = НКДПокупки;
//		Движение.НКДПродажи = ВыборкаЦеннаяБумага.НКД;
//		Движение.Комиссия = ВыборкаЦеннаяБумага.Комиссия+КомиссияПокупки; // Разделить?

//		
//	КонецЦикла;
//	

//	Если НЕ Отказ Тогда
//	
//		// регистр ОстаткиДенежныхСредств Приход
//		Движение = Движения.ОстаткиДенежныхСредств.Добавить();
//		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
//		Движение.Период = Дата;
//		Движение.БрокерскийСчет = БрокерскийСчет;
//		Движение.Сумма = СписокПродаж.Итог("Сумма")-СписокПродаж.Итог("Комиссия")+СписокПродаж.Итог("НКД"); //СуммаВсегоМинусКомиссияПлюсНКД;
//	
//	КонецЕсли; 	



//	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
//	// Данный фрагмент построен конструктором.
//	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!


//	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
//КонецПроцедуры
